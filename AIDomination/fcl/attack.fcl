// Block definition (there may be more than one block per file)
FUNCTION_BLOCK attack

	// Define input variables
	VAR_INPUT
	    victory : REAL;
	    enemy : REAL;
	END_VAR
	
	// Define output variable
	VAR_OUTPUT
	    attack : REAL;
	END_VAR
	
	FUZZIFY victory // [0, 100]
		TERM unlikely := sigm -0.25 30;
	    TERM possible := sigm 0.25 50;
	    TERM probable := sigm 0.25 75;
	    TERM certain := (90, 0) (100, 1);	    
	END_FUZZIFY
	
	FUZZIFY enemy // [0, 10]
	    TERM weak := sigm -3 3; 
	    TERM average := gbell 2 4 5;
	    TERM powerful := sigm 3 7;
	END_FUZZIFY
	
	DEFUZZIFY attack // [0, 10]
	    TERM discouraged := (0,1) (3,0);
	    TERM advised := (3,0) (6,1);
	    TERM strategic := (6,0) (9,1) (10, 1);
	    // Use 'Center Of Gravity' defuzzification method
	    METHOD : COG;
	    // Default value is 0 (if no rule activates defuzzifier)
	    DEFAULT := 0;
	END_DEFUZZIFY
	
	RULEBLOCK No1
	    // Use 'min' for 'and' (also implicit use 'max'
	    // for 'or' to fulfill DeMorgan's Law)
	    AND : MIN;
	    // Use 'min' activation method
	    ACT : MIN;
	    // Use 'max' accumulation method
	    ACCU : MAX;
	
	    RULE 1 : IF victory IS probable AND enemy IS powerful
	                THEN attack IS strategic;
	
	    RULE 2 : IF victory IS probable
	                THEN attack IS advised; 
	
	    RULE 3 : IF victory IS possible AND enemy IS weak 
	                THEN attack is strategic;
	                
	    RULE 4 : IF victory IS unlikely
	    			THEN attack is discouraged;
	   	
	   	RULE 5 : IF victory IS certain 
	   				THEN attack is strategic;
	                
	END_RULEBLOCK

END_FUNCTION_BLOCK

// Block definition (there may be more than one block per file)
FUNCTION_BLOCK attack2

	// Define input variables
	VAR_INPUT
	    victory : REAL;
	    enemy : REAL;
	    continent : REAL;
	    cost : REAL;
	END_VAR
	
	// Define output variable
	VAR_OUTPUT
	    attack : REAL;
	END_VAR
	
	FUZZIFY victory // [0, 100]
	    TERM likely := sigm 0.1 50;
	    TERM probable := (40,0) (50,0.5) (90, 1) (100,1);	    
	END_FUZZIFY
	
	FUZZIFY enemy // [0, 10]
	    TERM weak := sigm -3 3; 
	    TERM average := gbell 2 4 5;
	    TERM powerful := sigm 3 7;
	END_FUZZIFY
		
	FUZZIFY cost
		TERM high := (0,0) (0.5,0.25) (0.75, 0.5) (1,1);
	END_FUZZIFY
		
	FUZZIFY continent
		TERM good := (0,0) (10,1);
	END_FUZZIFY
	
	DEFUZZIFY attack // [0, 1]
	    TERM strategic := (0,0) (1,1);
	    TERM discouraged := (0,1) (1,0);
	    METHOD : LM;
	    // Default value is 0 (if no rule activates defuzzifier)
	    DEFAULT := 0;
	END_DEFUZZIFY
	
	RULEBLOCK No1
	    // Use 'min' for 'and' (also implicit use 'max'
	    // for 'or' to fulfill DeMorgan's Law)
	    AND : MIN;
	    // Use 'min' activation method
	    ACT : MIN;
	    // Use 'max' accumulation method
	    ACCU : MAX;
	
	    RULE 1 : IF continent IS good AND cost IS NOT high
	                THEN attack is strategic;

		RULE 2 : IF victory IS NOT likely
					THEN attack IS discouraged;
					
	   	RULE 3 : IF victory IS probable 
	   				THEN attack IS strategic;
	   				
	   	RULE 5 : IF enemy IS weak AND victory IS probable
	   				THEN attack IS strategic WITH 0.5;
	                
	END_RULEBLOCK

END_FUNCTION_BLOCK